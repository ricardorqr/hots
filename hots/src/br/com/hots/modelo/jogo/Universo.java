package br.com.hots.modelo.jogo;

// Generated 22/08/2015 22:43:50 by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Calendar;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.envers.Audited;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Universo generated by hbm2java
 */
@Cacheable
@Audited
@Entity
@Table(name = "universo", catalog = "hots", uniqueConstraints = @UniqueConstraint(columnNames = "deUniverso"))
public class Universo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idUniverso;
	private String deUniverso;
	private Date dataCadastro;
	private String flagAtivo;
	private Set<Heroi> herois = new HashSet<Heroi>(0);

	public Universo() {
	}

	public Universo(String deUniverso, Date dataCadastro, String flagAtivo) {
		this.deUniverso = deUniverso;
		this.dataCadastro = dataCadastro;
		this.flagAtivo = flagAtivo;
	}

	public Universo(String deUniverso, Date dataCadastro, String flagAtivo,
			Set<Heroi> herois) {
		this.deUniverso = deUniverso;
		this.dataCadastro = dataCadastro;
		this.flagAtivo = flagAtivo;
		this.herois = herois;
	}

	@PrePersist
	public void atualizaCamposParaInsercao() {
		setDataCadastro(Calendar.getInstance().getTime());
		setFlagAtivo("S");
	}

	@PreUpdate
	public void atualizaCamposParaAtualizacao() {
		setDataCadastro(Calendar.getInstance().getTime());
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idUniverso", unique = true, nullable = false)
	public Integer getIdUniverso() {
		return this.idUniverso;
	}

	public void setIdUniverso(Integer idUniverso) {
		this.idUniverso = idUniverso;
	}

	@NotEmpty(message = "O campo universo é obrigatório")
	@Column(name = "deUniverso", unique = true, nullable = false, length = 100)
	public String getDeUniverso() {
		return this.deUniverso;
	}

	public void setDeUniverso(String deUniverso) {
		this.deUniverso = deUniverso;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataCadastro", nullable = false, length = 19)
	public Date getDataCadastro() {
		return this.dataCadastro;
	}

	public void setDataCadastro(Date dataCadastro) {
		this.dataCadastro = dataCadastro;
	}

	@Column(name = "flagAtivo", nullable = false, length = 1)
	public String getFlagAtivo() {
		return this.flagAtivo;
	}

	public void setFlagAtivo(String flagAtivo) {
		this.flagAtivo = flagAtivo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "universo")
	public Set<Heroi> getHerois() {
		return this.herois;
	}

	public void setHerois(Set<Heroi> herois) {
		this.herois = herois;
	}

}
