package br.com.hots.modelo;

// Generated 23/07/2015 21:11:30 by Hibernate Tools 4.3.1

import java.util.Calendar;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.envers.Audited;
import org.hibernate.validator.constraints.NotEmpty;

/**
 * Usuario generated by hbm2java
 */
@Audited
@Entity
@Table(name = "usuario", catalog = "hots", uniqueConstraints = @UniqueConstraint(columnNames = "login"))
public class Usuario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idUsuario;
	private String login;
	private String senha;
	private String nome;
	private Calendar dataCadastro;
	private String flagAtivo;

	public Usuario() {
	}

	public Usuario(String login, String senha, String nome, Calendar dataCadastro, String flagAtivo) {
		this.login = login;
		this.senha = senha;
		this.nome = nome;
		this.dataCadastro = dataCadastro;
		this.flagAtivo = flagAtivo;
	}
	
	@PrePersist
	public void atualizaCamposParaInsercao() {
		setDataCadastro(Calendar.getInstance());
		setFlagAtivo("S");
	}

	@PreUpdate
	public void atualizaCamposParaAtualizacao() {
		setDataCadastro(Calendar.getInstance());
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idUsuario", unique = true, nullable = false)
	public Integer getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(Integer idUsuario) {
		this.idUsuario = idUsuario;
	}
	
	@NotEmpty(message="O campo login é obrigatório")
	@Column(name = "login", unique = true, nullable = false, length = 100)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@NotEmpty(message="O campo senha é obrigatório")
	@Column(name = "senha", nullable = false, length = 100)
	public String getSenha() {
		return this.senha;
	}

	public void setSenha(String senha) {
		this.senha = senha;
	}

	@NotEmpty(message="O campo nome é obrigatório")
	@Column(name = "nome", nullable = false, length = 100)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataCadastro", nullable = false, length = 19)
	public Calendar getDataCadastro() {
		return this.dataCadastro;
	}

	public void setDataCadastro(Calendar dataCadastro) {
		this.dataCadastro = dataCadastro;
	}

	@Column(name = "flagAtivo", nullable = false, length = 1)
	public String getFlagAtivo() {
		return this.flagAtivo;
	}

	public void setFlagAtivo(String flagAtivo) {
		this.flagAtivo = flagAtivo;
	}

}